include ../make_conf

OBJS := \
x11_icon.o \
x11_canvas.o \
x11_container_container.o \
x11_client_container.o \
x11_widget.o \
x11_server_widget.o \
x11_client_widget.o \
x11_client.o x11_shortcut.o \
x11_shortcut_set.o \
x11_default_key_bindings.o \
x11_application.o \
x11_global.o \
main.o


all: ttm-wm

../common/libcommon.a:
	make -C ../common

ttm-wm: ../common/libcommon.a $(OBJS)
	$(CXX) $(CXXFLAGS) -L../common $(OBJS) -lX11 -lcommon -o ttm-wm

# pull in dependency info for *existing* .o files
# from gnu make manual:
# If you want make to simply ignore a makefile which does not exist or cannot be remade,
# with no error message, use the -include directive instead of include
-include $(OBJS:.o=.d)

# compile and generate dependency info
%.o: %.cpp
	$(CXX) $(CXXFLAGS) -I../common -MD -c $*.cpp

clean:
	rm -f ttm-wm *.o .*.d
